{"version":3,"sources":["components/Movie.js","routes/Home.js","routes/About.js","routes/Detail.js","components/Navigation.js","App.js","index.js"],"names":["Movie","id","year","title","summary","poster","genres","className","to","pathname","state","src","alt","map","genre","index","slice","Home","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","medium_cover_image","React","Component","About","props","console","log","Detail","location","history","undefined","push","Navigation","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1abc5622.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Movie.css\";\r\n\r\nfunction Movie({ id, year, title, summary, poster, genres }) {\r\n  return (\r\n    <div className=\"movie\">\r\n      <Link\r\n        to={{\r\n          pathname: `/movie/${id}`,\r\n          state: {\r\n            year,\r\n            title,\r\n            summary,\r\n            poster,\r\n            genres,\r\n          },\r\n        }} // 넘겨주는 데이터\r\n      >\r\n        <img src={poster} alt={title} title={title} />\r\n        <div className=\"movie__data\">\r\n          <h3 className=\"movie__title\">{title}</h3>\r\n          <h5 className=\"movie__year\">{year}</h5>\r\n          <ul className=\"movie__genres\">\r\n            {genres.map((genre, index) => (\r\n              <li key={index} className=\"genres__genre\">\r\n                {genre}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          <p className=\"movie__summary\">{summary.slice(0, 180)}...</p>\r\n        </div>\r\n      </Link>\r\n      {/* 이까지가 다 링크 */}\r\n    </div>\r\n  );\r\n}\r\n\r\nMovie.propTypes = {\r\n  // 넘어와야할 props 데이터가 있는지 확인하는 방법\r\n  id: PropTypes.number.isRequired,\r\n  year: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  summary: PropTypes.string.isRequired,\r\n  poster: PropTypes.string.isRequired,\r\n  genres: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n};\r\n\r\nexport default Movie;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport Movie from \"../components/Movie\";\r\nimport \"./Home.css\";\r\n\r\nclass Home extends React.Component {\r\n  state = {\r\n    isLoading: true,\r\n    movies: [],\r\n  };\r\n  getMovies = async () => {\r\n    const {\r\n      data: {\r\n        data: { movies },\r\n      },\r\n    } = await axios.get(\r\n      \"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\"\r\n    );\r\n    this.setState({ movies, isLoading: false });\r\n  }; // getMovies라는 함수 정의\r\n\r\n  componentDidMount() {\r\n    // render가 실행되기 전에 호출되는 함수\r\n    this.getMovies();\r\n  }\r\n  render() {\r\n    const { isLoading, movies } = this.state;\r\n    return (\r\n      <section className=\"container\">\r\n        {isLoading ? (\r\n          <div className=\"loader\">\r\n            <span className=\"loader__text\">Loading...</span>\r\n          </div>\r\n        ) : (\r\n          <div className=\"movies\">\r\n            {movies.map(movie => (\r\n              <Movie\r\n                key={movie.id}\r\n                id={movie.id}\r\n                year={movie.year}\r\n                title={movie.title}\r\n                summary={movie.summary}\r\n                poster={movie.medium_cover_image}\r\n                genres={movie.genres}\r\n                // 이렇게 props데이터를 넘겨준다.\r\n              />\r\n            ))}\r\n          </div>\r\n        )}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport \"./About.css\";\r\n\r\nfunction About(props) {\r\n  console.log(props);\r\n  return (\r\n    <div className=\"about__container\">\r\n      <span>“Well begun is half done”</span>\r\n      <span>− aristotle, philosopher</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import React from \"react\";\r\nimport \"./Detail.css\";\r\n\r\nclass Detail extends React.Component {\r\n  componentDidMount() {\r\n    const { location, history } = this.props; // 여기서 props란 Detail을 Link로 호출한 컴포넌트가 주는 데이터이다.\r\n    console.log(location); // 이게 Movie.js에서 넘어온 pathname과 state 객체가 들어있는 것\r\n    console.log(history);\r\n    if (location.state === undefined) {\r\n      // 만약에 location이 없으면 (= 넘어온 데이터가 없으면, id가 없으면)\r\n      history.push(\"/\"); // 이 histroy는 도대체 뭐지?\r\n      // history란 porps로 같이 넘어오는 정보인데 이 기능을 사용하면 쉽게 리다이렉션 할 수 있어서 사용했다.\r\n    }\r\n    // 정의되지 않은 id가 들어오면 home으로 돌려보냄, 리다이렉트 하는 것\r\n  }\r\n  render() {\r\n    const { location } = this.props;\r\n    if (location.state) {\r\n      return (\r\n        <div className=\"about__container\">\r\n          <img\r\n            src={location.state.poster}\r\n            alt={location.state.title}\r\n            title={location.state.title}\r\n          />\r\n          <div className=\"movie__data\">\r\n            <h3 className=\"movie__title\">{location.state.title}</h3>\r\n            <h5 className=\"movie__year\">{location.state.year}</h5>\r\n            <ul className=\"movie__genres\">\r\n              {location.state.genres.map((genre, index) => (\r\n                <li key={index} className=\"genres__genre\">\r\n                  {genre}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n            <p className=\"movie__summary\">{location.state.summary}</p>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\nexport default Detail;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Navigation.css\";\r\n\r\nfunction Navigation() {\r\n  return (\r\n    <div className=\"nav\">\r\n      <Link to=\"/\">Home</Link>\r\n      <Link to=\"/about\">About</Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport { HashRouter, Route } from \"react-router-dom\";\r\nimport Home from \"./routes/Home\";\r\nimport About from \"./routes/About\";\r\nimport Detail from \"./routes/Detail\";\r\nimport Navigation from \"./components/Navigation\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <HashRouter>\r\n      <Navigation />\r\n      <Route path=\"/\" exact={true} component={Home} />\r\n      <Route path=\"/about\" component={About} />\r\n      <Route path=\"/movie/:id\" component={Detail} />\r\n      {/* 라우트는 주소가 이렇게 되어있을 때, 해당 컴포넌트를 사용하라고 알려주는 것 */}\r\n      {/* 즉 특정 주소에서 특정 컴포넌트를 사용하도록 해주는 것이다. 하지만 특정 주소로 향하는 방법은 다른 방법을 사용해야한다. */}\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}